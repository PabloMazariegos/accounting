server:
  servlet:
    context-path: /accounting
  port: 5000

spring:
  profiles:
    active: ${ACTIVE_PROFILE}
  application:
    name: accounting-api
  jpa:
    database: postgresql
    show-sql: false
    open-in-view: false
    hibernate:
      ddl-auto: validate

---
spring:
  config:
    activate:
      on-profile: develop
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  rabbitmq:
    host: ${RABBITMQ_URL}
    port: 5672
    listener:
      simple:
        retry:
          enabled: true
  data:
    rest:
      default-media-type: application/json
rabbitmq.properties:
  queue:
    retry: r-accounting-queue.dev
    dead: d-accounting-queue.dev
  exchange:
    retry: r-accounting-exchange.dev
    dead: d-accounting-exchange.dev
  routing:
    retry: r-accounting-routing.dev
    dead: d-accounting-routing.dev


---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  rabbitmq:
    host: ${RABBITMQ_URL}
    port: 5672
    listener:
      simple:
        retry:
          enabled: true
  data:
    rest:
      default-media-type: application/json
rabbitmq.properties:
  queue:
    retry: r-accounting-queue.prod
    dead: d-accounting-queue.prod
  exchange:
    retry: r-accounting-exchange.prod
    dead: d-accounting-exchange.prod
  routing:
    retry: r-accounting-routing.prod
    dead: d-accounting-routing.prod